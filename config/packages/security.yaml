security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers


    providers:
        in_database:
            entity:
                class: App\Entity\Candidat
                property: Email
        from_database:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        candidat:
            pattern: ^/candidat/login


            # but the firewall does not require login on every page
            # denying access is done in access_control or in your controllers

            anonymous: true
            provider: in_database

            # This allows the user to login by submitting a username and password
            # Reference: http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            form_login:

                # The route name that the login form submits to
                check_path: logincandidat
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: logincandidat
                # Secure the login form against CSRF
                # Reference: http://symfony.com/doc/current/cookbook/security/csrf_in_login_form.html


                default_target_path: candidat
                always_use_default_target_path: true

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            form_login:
                provider: from_database
                check_path: login
                default_target_path: stage_list
                always_use_default_target_path: true
            logout:
                path: /logout
                target: /login


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true





    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
         #- { path: ^/candidat, roles: ROLE_USER }

    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12
        App\Entity\Candidat:
            algorithm: bcrypt
            cost: 12
